def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

// Check if new architecture is enabled
def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

buildscript {
    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
    }
}

apply plugin: 'com.android.library'

// Note: React Native Codegen plugin is optional for our implementation
// We provide manual TurboModule implementation for better compatibility

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 33)
    buildToolsVersion safeExtGet('buildToolsVersion', '33.0.0')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 21)
        targetSdkVersion safeExtGet('targetSdkVersion', 33)
        versionCode 1
        versionName "1.0"
        
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        buildConfigField "boolean", "REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS", (findProperty("reactNative.unstable_useRuntimeSchedulerAlways") ?: true).toString()
    }
    
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    
    lintOptions {
        disable 'GradleCompatible'
        abortOnError false
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven {
        // As RN is not updated in jcenter anymore, we'll have to grab it from npm
        url "../node_modules/react-native/android"
    }
    mavenCentral()
    google()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation 'androidx.core:core:1.6.0'
    implementation 'androidx.media:media:1.6.0'
    
    // For legacy architecture, this is all we need
    // New Architecture dependencies will be provided by the app's React Native setup
}

// Codegen configuration for New Architecture
// Note: We provide our own TurboModule implementation, so Codegen is optional
// if (isNewArchitectureEnabled()) {
//     react {
//         jsRootDir = file("../src/")
//         libraryName = "RNMusicControlSpec"
//         codegenJavaPackageName = "com.tanguyantoine.react"
//     }
// }
